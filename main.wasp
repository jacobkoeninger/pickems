app Pickems {
  wasp: {
    version: "^0.15.0"
  },
  title: "Pickems",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
  db: {
    seeds: [
      import { devSeedAdmin } from "@src/dbSeeds.js",
    ]
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}
action createPickem {
  fn: import { createPickem } from "@src/actions.js",
  entities: [Pickem, PickemChoice, User]
}

action createUserPickemChoice {
  fn: import { createUserPickemChoice } from "@src/actions.js",
  entities: [User, PickemChoice, UserPickemChoice]
}

action createContest {
  fn: import { createContest } from "@src/actions.js",
  entities: [Contest, Pickem, PickemChoice, User]
}

action closePickem {
  fn: import { closePickem } from "@src/actions.js",
  entities: [Pickem, PickemChoice, User]
}

query getOpenPickems {
  fn: import { getOpenPickems } from "@src/queries.js",
  entities: [Pickem]
}

query getPickemChoices {
  fn: import { getPickemChoices } from "@src/queries.js",
  entities: [PickemChoice]
}

query getUserPickemChoices {
  fn: import { getUserPickemChoices } from "@src/queries.js",
  entities: [UserPickemChoice]
}

query getCategories {
  fn: import { getCategories } from "@src/queries.js",
  entities: [PickemCategory]
}

query getContests {
  fn: import { getContests } from "@src/queries.js",
  entities: [Contest]
}

route PickemPageRoute { path: "/", to: PickemPage }
page PickemPage {
  component: import PickemPage from "@src/pages/PickemPage.jsx",
  authRequired: true
}

route AdminDashboardRoute { path: "/admin", to: AdminDashboard }
page AdminDashboard {
  component: import AdminDashboard from "@src/pages/AdminDashboard.jsx",
  authRequired: true
}
